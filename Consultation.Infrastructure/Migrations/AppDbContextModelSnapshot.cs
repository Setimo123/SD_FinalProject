// <auto-generated />
using System;
using Consultation.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Consultation.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Consultation.Domain.ActionLog", b =>
                {
                    b.Property<int>("ActionLogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ActionLogID"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<TimeOnly>("Time")
                        .HasColumnType("time(6)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsersId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ActionLogID");

                    b.HasIndex("UsersId");

                    b.ToTable("ActionLog");
                });

            modelBuilder.Entity("Consultation.Domain.Admin", b =>
                {
                    b.Property<int>("AdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AdminID"));

                    b.Property<string>("AdminName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsersID")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("AdminID");

                    b.HasIndex("UsersID");

                    b.ToTable("Admin");

                    b.HasData(
                        new
                        {
                            AdminID = 1,
                            AdminName = "Jay Al Gallenero",
                            UsersID = "28DC4EA5-8AA7-43AA-813B-3E85D547893A"
                        });
                });

            modelBuilder.Entity("Consultation.Domain.Bulletin", b =>
                {
                    b.Property<int>("BulletinID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("BulletinID"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DatePublished")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FileCount")
                        .HasColumnType("int");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("BulletinID");

                    b.ToTable("Bulletin");
                });

            modelBuilder.Entity("Consultation.Domain.ConsultationRequest", b =>
                {
                    b.Property<int>("ConsultationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ConsultationID"));

                    b.Property<string>("Concern")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateRequested")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateSchedule")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DisapprovedReason")
                        .HasColumnType("longtext");

                    b.Property<TimeOnly>("EndedTime")
                        .HasColumnType("time(6)");

                    b.Property<int>("FacultyID")
                        .HasColumnType("int");

                    b.Property<string>("ProgramName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<TimeOnly>("StartedTime")
                        .HasColumnType("time(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<string>("SubjectCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ConsultationID");

                    b.HasIndex("FacultyID");

                    b.HasIndex("StudentID");

                    b.ToTable("ConsultationRequest");

                    b.HasData(
                        new
                        {
                            ConsultationID = 1,
                            Concern = "Having trouble following discussions",
                            DateRequested = new DateTime(2025, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateSchedule = new DateTime(2025, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndedTime = new TimeOnly(16, 0, 0),
                            FacultyID = 14,
                            ProgramName = "ECE",
                            StartedTime = new TimeOnly(15, 0, 0),
                            Status = 5,
                            StudentID = 9,
                            SubjectCode = "CEE103"
                        },
                        new
                        {
                            ConsultationID = 2,
                            Concern = "Follow-up on previous consultation",
                            DateRequested = new DateTime(2025, 9, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateSchedule = new DateTime(2025, 9, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisapprovedReason = "Faculty unavailable",
                            EndedTime = new TimeOnly(11, 0, 0),
                            FacultyID = 10,
                            ProgramName = "CpE",
                            StartedTime = new TimeOnly(10, 0, 0),
                            Status = 3,
                            StudentID = 2,
                            SubjectCode = "CPE221L"
                        },
                        new
                        {
                            ConsultationID = 3,
                            Concern = "Concerns regarding my grades",
                            DateRequested = new DateTime(2025, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateSchedule = new DateTime(2025, 10, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndedTime = new TimeOnly(12, 30, 0),
                            FacultyID = 11,
                            ProgramName = "ME",
                            StartedTime = new TimeOnly(11, 30, 0),
                            Status = 1,
                            StudentID = 10,
                            SubjectCode = "CEE105"
                        });
                });

            modelBuilder.Entity("Consultation.Domain.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("DepartmentID"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("DepartmentID");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            DepartmentID = 1,
                            DepartmentName = "CASE",
                            Description = "College of Arts and Sciences Education"
                        },
                        new
                        {
                            DepartmentID = 2,
                            DepartmentName = "CBAE",
                            Description = "College of Business Administration Education"
                        },
                        new
                        {
                            DepartmentID = 3,
                            DepartmentName = "CEE",
                            Description = "College of Engineering Education"
                        },
                        new
                        {
                            DepartmentID = 4,
                            DepartmentName = "CAE",
                            Description = "College of Accounting Education"
                        },
                        new
                        {
                            DepartmentID = 5,
                            DepartmentName = "CAFAE",
                            Description = "College of Architecture and Fine Arts Education"
                        },
                        new
                        {
                            DepartmentID = 6,
                            DepartmentName = "CCE",
                            Description = "College of Computing Education"
                        },
                        new
                        {
                            DepartmentID = 7,
                            DepartmentName = "CTE",
                            Description = "College of Teacher Education"
                        },
                        new
                        {
                            DepartmentID = 8,
                            DepartmentName = "CCJE",
                            Description = "College of Criminal Justice Education"
                        },
                        new
                        {
                            DepartmentID = 9,
                            DepartmentName = "CHE",
                            Description = "College of Hospitality Education"
                        },
                        new
                        {
                            DepartmentID = 10,
                            DepartmentName = "CHSE",
                            Description = "College of Health Sciences Education"
                        });
                });

            modelBuilder.Entity("Consultation.Domain.EnrolledCourse", b =>
                {
                    b.Property<int>("EnrolledCourseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EnrolledCourseID"));

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("FacultyID")
                        .HasColumnType("int");

                    b.Property<string>("ProgramCourse")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SchoolYearID")
                        .HasColumnType("int");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("EnrolledCourseID");

                    b.HasIndex("FacultyID");

                    b.HasIndex("SchoolYearID");

                    b.HasIndex("StudentID");

                    b.ToTable("EnrolledCourse");

                    b.HasData(
                        new
                        {
                            EnrolledCourseID = 1,
                            CourseCode = "CEE103",
                            CourseName = "Engineering Calculus 2",
                            FacultyID = 14,
                            ProgramCourse = "ECE",
                            SchoolYearID = 1,
                            StudentID = 9
                        },
                        new
                        {
                            EnrolledCourseID = 2,
                            CourseCode = "CEE102L",
                            CourseName = "Physics 1 for Engineers",
                            FacultyID = 12,
                            ProgramCourse = "CE",
                            SchoolYearID = 1,
                            StudentID = 8
                        },
                        new
                        {
                            EnrolledCourseID = 3,
                            CourseCode = "CPE211L",
                            CourseName = "Data Structures and Algorithms",
                            FacultyID = 10,
                            ProgramCourse = "CpE",
                            SchoolYearID = 1,
                            StudentID = 2
                        },
                        new
                        {
                            EnrolledCourseID = 4,
                            CourseCode = "DRAW102L",
                            CourseName = "Computer Aided Drafting",
                            FacultyID = 13,
                            ProgramCourse = "EE",
                            SchoolYearID = 1,
                            StudentID = 4
                        },
                        new
                        {
                            EnrolledCourseID = 5,
                            CourseCode = "CEE105",
                            CourseName = "Engineering Data Analysis",
                            FacultyID = 11,
                            ProgramCourse = "ME",
                            SchoolYearID = 1,
                            StudentID = 10
                        },
                        new
                        {
                            EnrolledCourseID = 6,
                            CourseCode = "CEE104",
                            CourseName = "Differential Equations",
                            FacultyID = 15,
                            ProgramCourse = "ChE",
                            SchoolYearID = 2,
                            StudentID = 7
                        },
                        new
                        {
                            EnrolledCourseID = 7,
                            CourseCode = "CEE109",
                            CourseName = "Engineering Economics",
                            FacultyID = 12,
                            ProgramCourse = "CE",
                            SchoolYearID = 2,
                            StudentID = 1
                        },
                        new
                        {
                            EnrolledCourseID = 8,
                            CourseCode = "CPE223L",
                            CourseName = "Software Design",
                            FacultyID = 5,
                            ProgramCourse = "CpE",
                            SchoolYearID = 2,
                            StudentID = 5
                        },
                        new
                        {
                            EnrolledCourseID = 9,
                            CourseCode = "BEE212L",
                            CourseName = "Fundamentals of Electric Circuits",
                            FacultyID = 13,
                            ProgramCourse = "CpE",
                            SchoolYearID = 1,
                            StudentID = 6
                        },
                        new
                        {
                            EnrolledCourseID = 10,
                            CourseCode = "CEE115",
                            CourseName = "Technopreneurship",
                            FacultyID = 2,
                            ProgramCourse = "CpE",
                            SchoolYearID = 3,
                            StudentID = 3
                        });
                });

            modelBuilder.Entity("Consultation.Domain.Faculty", b =>
                {
                    b.Property<int>("FacultyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("FacultyID"));

                    b.Property<string>("FacultyEmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FacultyName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FacultyUMID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProgramID")
                        .HasColumnType("int");

                    b.Property<int>("SchoolYearID")
                        .HasColumnType("int");

                    b.Property<string>("UsersID")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("FacultyID");

                    b.HasIndex("ProgramID");

                    b.HasIndex("SchoolYearID");

                    b.HasIndex("UsersID");

                    b.ToTable("Faculty");

                    b.HasData(
                        new
                        {
                            FacultyID = 1,
                            FacultyEmail = "jadtoon@umindanao.edu.ph",
                            FacultyName = "Jetron Adtoon",
                            FacultyUMID = "330001",
                            ProgramID = 3,
                            SchoolYearID = 1,
                            UsersID = "6EC682D8-03CC-4EBB-B48D-3D8DCBDD443D"
                        },
                        new
                        {
                            FacultyID = 2,
                            FacultyEmail = "salagao@umindanao.edu.ph",
                            FacultyName = "Stephen Paul Alagao",
                            FacultyUMID = "330002",
                            ProgramID = 3,
                            SchoolYearID = 1,
                            UsersID = "19D57012-9A44-4B2B-BBAF-F9361EBF62F7"
                        },
                        new
                        {
                            FacultyID = 3,
                            FacultyEmail = "hangelia@umindanao.edu.ph",
                            FacultyName = "Hannah Leah Angelia",
                            FacultyUMID = "330003",
                            ProgramID = 3,
                            SchoolYearID = 1,
                            UsersID = "CA0C4ABD-802D-4B0F-85CF-778E7EA4EF01"
                        },
                        new
                        {
                            FacultyID = 4,
                            FacultyEmail = "rangelia@umindanao.edu.ph",
                            FacultyName = "Randy Angelia",
                            FacultyUMID = "330004",
                            ProgramID = 3,
                            SchoolYearID = 1,
                            UsersID = "4D919EA9-ADBA-420A-9B19-BF1878E178C6"
                        },
                        new
                        {
                            FacultyID = 5,
                            FacultyEmail = "jgallenero@umindanao.edu.ph",
                            FacultyName = "Jay Al Gallenero",
                            FacultyUMID = "330005",
                            ProgramID = 3,
                            SchoolYearID = 1,
                            UsersID = "A4A8293F-AC1D-44AA-836F-D4C0A79FCFD9"
                        },
                        new
                        {
                            FacultyID = 6,
                            FacultyEmail = "knepa@umindanao.edu.ph",
                            FacultyName = "Kimberly Nepa-Muaña",
                            FacultyUMID = "330006",
                            ProgramID = 3,
                            SchoolYearID = 1,
                            UsersID = "175A7233-93D9-4C74-870B-7C354E3035CC"
                        },
                        new
                        {
                            FacultyID = 7,
                            FacultyEmail = "jordas@umindanao.edu.ph",
                            FacultyName = "Jethro Joshua Ordas",
                            FacultyUMID = "330007",
                            ProgramID = 3,
                            SchoolYearID = 1,
                            UsersID = "4018C0AF-6764-446E-99E0-B81FE80961E0"
                        },
                        new
                        {
                            FacultyID = 8,
                            FacultyEmail = "ltubo@umindanao.edu.ph",
                            FacultyName = "Lester Tubo",
                            FacultyUMID = "330008",
                            ProgramID = 3,
                            SchoolYearID = 1,
                            UsersID = "53E836AA-802B-4432-B682-CD9F86691317"
                        },
                        new
                        {
                            FacultyID = 9,
                            FacultyEmail = "juy@umindanao.edu.ph",
                            FacultyName = "Julie Uy",
                            FacultyUMID = "330009",
                            ProgramID = 3,
                            SchoolYearID = 1,
                            UsersID = "A71A3F07-BDB7-44A9-8128-62848CF38181"
                        },
                        new
                        {
                            FacultyID = 10,
                            FacultyEmail = "mwata@umindanao.edu.ph",
                            FacultyName = "Marianne Wata",
                            FacultyUMID = "330010",
                            ProgramID = 3,
                            SchoolYearID = 1,
                            UsersID = "2B036F02-AC85-4511-A036-DA5B9238F157"
                        },
                        new
                        {
                            FacultyID = 11,
                            FacultyEmail = "ccañesares@umindanao.edu.ph",
                            FacultyName = "Charlito Cañesares",
                            FacultyUMID = "310001",
                            ProgramID = 1,
                            SchoolYearID = 1,
                            UsersID = "1DE3802A-E9C2-4B04-80DB-B32A3A5F1624"
                        },
                        new
                        {
                            FacultyID = 12,
                            FacultyEmail = "ccalunsag@umindanao.edu.ph",
                            FacultyName = "Carl Justine Calunsag",
                            FacultyUMID = "320001",
                            ProgramID = 2,
                            SchoolYearID = 1,
                            UsersID = "423965D1-0EF0-4CD9-931D-605CA7B38A3E"
                        },
                        new
                        {
                            FacultyID = 13,
                            FacultyEmail = "doro@umindanao.edu.ph",
                            FacultyName = "Dan David Aaron Oro",
                            FacultyUMID = "340001",
                            ProgramID = 4,
                            SchoolYearID = 1,
                            UsersID = "18DA9DD0-CA87-4389-B12D-2B1A793F7A59"
                        },
                        new
                        {
                            FacultyID = 14,
                            FacultyEmail = "emorales@umindanao.edu.ph",
                            FacultyName = "Egi Joe Fran Morales",
                            FacultyUMID = "350001",
                            ProgramID = 5,
                            SchoolYearID = 1,
                            UsersID = "AF1CA1A3-B937-45F0-9AE9-CBF355FE3F82"
                        },
                        new
                        {
                            FacultyID = 15,
                            FacultyEmail = "ramon@umindanao.edu.ph",
                            FacultyName = "Ramiro Emerson Amon",
                            FacultyUMID = "360001",
                            ProgramID = 6,
                            SchoolYearID = 1,
                            UsersID = "55D0D298-ED9B-4B4D-9270-2019C0A5802B"
                        });
                });

            modelBuilder.Entity("Consultation.Domain.FacultySchedule", b =>
                {
                    b.Property<int>("FacultyScheduleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("FacultyScheduleID"));

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<int>("FacultyID")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("TimeEnd")
                        .HasColumnType("time(6)");

                    b.Property<TimeOnly>("TimeStart")
                        .HasColumnType("time(6)");

                    b.HasKey("FacultyScheduleID");

                    b.HasIndex("FacultyID");

                    b.ToTable("FacultySchedule");

                    b.HasData(
                        new
                        {
                            FacultyScheduleID = 1,
                            Day = 1,
                            FacultyID = 14,
                            TimeEnd = new TimeOnly(16, 0, 0),
                            TimeStart = new TimeOnly(15, 0, 0)
                        },
                        new
                        {
                            FacultyScheduleID = 2,
                            Day = 3,
                            FacultyID = 10,
                            TimeEnd = new TimeOnly(11, 0, 0),
                            TimeStart = new TimeOnly(10, 0, 0)
                        },
                        new
                        {
                            FacultyScheduleID = 3,
                            Day = 5,
                            FacultyID = 11,
                            TimeEnd = new TimeOnly(12, 30, 0),
                            TimeStart = new TimeOnly(11, 30, 0)
                        });
                });

            modelBuilder.Entity("Consultation.Domain.Notification", b =>
                {
                    b.Property<int>("NotificationNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("NotificationNumber"));

                    b.Property<string>("NotificationMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NotificationType")
                        .HasColumnType("int");

                    b.HasKey("NotificationNumber");

                    b.ToTable("Notification");

                    b.HasData(
                        new
                        {
                            NotificationNumber = 1,
                            NotificationMessage = "Your consultation request has been successfully submitted.",
                            NotificationType = 1
                        },
                        new
                        {
                            NotificationNumber = 2,
                            NotificationMessage = "Your consultation schedule has been disapproved by the faculty.",
                            NotificationType = 1
                        },
                        new
                        {
                            NotificationNumber = 3,
                            NotificationMessage = "A new faculty account has been registered in the system.",
                            NotificationType = 2
                        });
                });

            modelBuilder.Entity("Consultation.Domain.Program", b =>
                {
                    b.Property<int>("ProgramID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProgramID"));

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProgramName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ProgramID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Program");

                    b.HasData(
                        new
                        {
                            ProgramID = 1,
                            DepartmentID = 3,
                            Description = "Mechanical Engineering",
                            ProgramName = "ME"
                        },
                        new
                        {
                            ProgramID = 2,
                            DepartmentID = 3,
                            Description = "Civil Engineering",
                            ProgramName = "CE"
                        },
                        new
                        {
                            ProgramID = 3,
                            DepartmentID = 3,
                            Description = "Computer Engineering",
                            ProgramName = "CpE"
                        },
                        new
                        {
                            ProgramID = 4,
                            DepartmentID = 3,
                            Description = "Electrical Engineering",
                            ProgramName = "EE"
                        },
                        new
                        {
                            ProgramID = 5,
                            DepartmentID = 3,
                            Description = "Electronics and Communication Engineering",
                            ProgramName = "ECE"
                        },
                        new
                        {
                            ProgramID = 6,
                            DepartmentID = 3,
                            Description = "Chemical Engineering",
                            ProgramName = "ChE"
                        },
                        new
                        {
                            ProgramID = 7,
                            DepartmentID = 3,
                            Description = "Materials Engineering",
                            ProgramName = "MaE"
                        });
                });

            modelBuilder.Entity("Consultation.Domain.SchoolYear", b =>
                {
                    b.Property<int>("SchoolYearID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SchoolYearID"));

                    b.Property<int>("SchoolYearStatus")
                        .HasColumnType("int");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.Property<string>("Year1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Year2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("SchoolYearID");

                    b.ToTable("SchoolYear");

                    b.HasData(
                        new
                        {
                            SchoolYearID = 1,
                            SchoolYearStatus = 1,
                            Semester = 1,
                            Year1 = "2024",
                            Year2 = "2025"
                        },
                        new
                        {
                            SchoolYearID = 2,
                            SchoolYearStatus = 1,
                            Semester = 2,
                            Year1 = "2024",
                            Year2 = "2025"
                        },
                        new
                        {
                            SchoolYearID = 3,
                            SchoolYearStatus = 1,
                            Semester = 3,
                            Year1 = "2024",
                            Year2 = "2025"
                        });
                });

            modelBuilder.Entity("Consultation.Domain.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("StudentID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProgramID")
                        .HasColumnType("int");

                    b.Property<int>("SchoolYearID")
                        .HasColumnType("int");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("StudentUMID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsersID")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("yearLevel")
                        .HasColumnType("int");

                    b.HasKey("StudentID");

                    b.HasIndex("ProgramID");

                    b.HasIndex("SchoolYearID");

                    b.HasIndex("UsersID");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentID = 1,
                            Email = "c.balsomo.544358@umindanao.edu.ph",
                            ProgramID = 1,
                            SchoolYearID = 1,
                            StudentName = "Cheley Balsomo",
                            StudentUMID = "544358",
                            UsersID = "1CE43429-A555-45F8-8D14-F93C147247B5",
                            yearLevel = 3
                        },
                        new
                        {
                            StudentID = 2,
                            Email = "h.basarte.550409@umindanao.edu.ph",
                            ProgramID = 1,
                            SchoolYearID = 1,
                            StudentName = "Harwyne Ace Basarte",
                            StudentUMID = "550409",
                            UsersID = "305AE16B-FBDB-435D-B97E-5A5EF3DC236D",
                            yearLevel = 3
                        },
                        new
                        {
                            StudentID = 3,
                            Email = "c.destajo.546094@umindanao.edu.ph",
                            ProgramID = 2,
                            SchoolYearID = 1,
                            StudentName = "Christopher John Destajo",
                            StudentUMID = "546094",
                            UsersID = "EAD9B361-DF40-48F6-AC0F-4A89AFFA72D2",
                            yearLevel = 3
                        },
                        new
                        {
                            StudentID = 4,
                            Email = "r.isid.545154@umindanao.edu.ph",
                            ProgramID = 2,
                            SchoolYearID = 1,
                            StudentName = "Riane Kaiser Isid",
                            StudentUMID = "545154",
                            UsersID = "C67B48B9-C09D-4A03-BB9F-A3E70D98EAFF",
                            yearLevel = 3
                        },
                        new
                        {
                            StudentID = 5,
                            Email = "j.labsan.548631@umindanao.edu.ph",
                            ProgramID = 3,
                            SchoolYearID = 1,
                            StudentName = "Jeanelle Labsan",
                            StudentUMID = "548631",
                            UsersID = "DA470776-6AD4-42A3-9266-6DC67444D7B7",
                            yearLevel = 3
                        },
                        new
                        {
                            StudentID = 6,
                            Email = "r.mateo.547357@umindanao.edu.ph",
                            ProgramID = 3,
                            SchoolYearID = 1,
                            StudentName = "Reygian Mateo",
                            StudentUMID = "547357",
                            UsersID = "9ECC5D8A-A6A9-46ED-89FC-BCD694F06CD7",
                            yearLevel = 3
                        },
                        new
                        {
                            StudentID = 7,
                            Email = "e.musni.545208@umindanao.edu.ph",
                            ProgramID = 4,
                            SchoolYearID = 1,
                            StudentName = "Ellaine Musni",
                            StudentUMID = "545208",
                            UsersID = "3A42AB5E-DC55-4BA4-9264-57C460539DDD",
                            yearLevel = 3
                        },
                        new
                        {
                            StudentID = 8,
                            Email = "n.orabi.535132@umindanao.edu.ph",
                            ProgramID = 4,
                            SchoolYearID = 1,
                            StudentName = "Nassim Ehab Orabi",
                            StudentUMID = "535132",
                            UsersID = "3FFC159F-6EF0-4D4E-8C95-3A75FA1600CE",
                            yearLevel = 3
                        },
                        new
                        {
                            StudentID = 9,
                            Email = "r.setimo.550200@umindanao.edu.ph",
                            ProgramID = 5,
                            SchoolYearID = 1,
                            StudentName = "Rene Cedric Setimo",
                            StudentUMID = "550200",
                            UsersID = "0542B05F-A99D-43E3-AC02-D1724FD88E27",
                            yearLevel = 3
                        },
                        new
                        {
                            StudentID = 10,
                            Email = "r.soylon.526044@umindanao.edu.ph",
                            ProgramID = 6,
                            SchoolYearID = 1,
                            StudentName = "Reggie Soylon",
                            StudentUMID = "526044",
                            UsersID = "B1FBEBAB-BDF2-473A-8AE4-E8CB036F32CE",
                            yearLevel = 3
                        });
                });

            modelBuilder.Entity("Consultation.Domain.Users", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UMID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "0542B05F-A99D-43E3-AC02-D1724FD88E27",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8d3ef0d9-b045-4b8f-a18f-15f2cbfa219b",
                            Email = "r.setimo.550200@umindanao.edu.ph",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "R.SETIMO.550200@UMINDANAO.EDU.PH",
                            NormalizedUserName = "RENE CEDRIC SETIMO",
                            PasswordHash = "AQAAAAIAAYagAAAAEBRX/c+d7MuoQMdvZRIFdhUCjzDvVRlxw1jcxqm0BD5/JDU9seuUNrVfkn/wkmhcqw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5a54c967-0b1f-4c38-bda7-5f94e4c1a3f4",
                            TwoFactorEnabled = false,
                            UMID = "550200",
                            UserName = "Rene Cedric Setimo",
                            UserType = 1
                        },
                        new
                        {
                            Id = "1CE43429-A555-45F8-8D14-F93C147247B5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8d3ef0d9-b045-4b8f-a18f-15f2cbfa219b",
                            Email = "c.balsomo.544358@umindanao.edu.ph",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "C.BALSOMO.544358@UMINDANAO.EDU.PH",
                            NormalizedUserName = "CHELEY BALSOMO",
                            PasswordHash = "AQAAAAIAAYagAAAAEPetr4Kr7ddS/t28dGj7I1nvB1D96ePbaUIaT4LBbcF6Rj1GjysXQ44QO8OXCVd/7g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5a54c967-0b1f-4c38-bda7-5f94e4c1a3f4",
                            TwoFactorEnabled = false,
                            UMID = "544358",
                            UserName = "Cheley Balsomo",
                            UserType = 1
                        },
                        new
                        {
                            Id = "305AE16B-FBDB-435D-B97E-5A5EF3DC236D",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8d3ef0d9-b045-4b8f-a18f-15f2cbfa219b",
                            Email = "h.basarte.550409@umindanao.edu.ph",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "H.BASARTE.550409@UMINDANAO.EDU.PH",
                            NormalizedUserName = "HARWYNE ACE BASARTE",
                            PasswordHash = "AQAAAAIAAYagAAAAEPAh1El//va86g4HfCY+uYk24PW+0Y+v/f3+04YjOFLn9uiM8jbR+/TkCFxhUzA5xw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5a54c967-0b1f-4c38-bda7-5f94e4c1a3f4",
                            TwoFactorEnabled = false,
                            UMID = "550409",
                            UserName = "Harwyne Ace Basarte",
                            UserType = 1
                        },
                        new
                        {
                            Id = "3A42AB5E-DC55-4BA4-9264-57C460539DDD",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8d3ef0d9-b045-4b8f-a18f-15f2cbfa219b",
                            Email = "e.musni.545208@umindanao.edu.ph",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "E.MUSNI.545208@UMINDANAO.EDU.PH",
                            NormalizedUserName = "ELLAINE MUSNI",
                            PasswordHash = "AQAAAAIAAYagAAAAEPUzxTWvKWqr3qIWpkpDQgTVnzK5vNcWi6uMnEwSvB/37dzPqNB/k0IOT3HodRcnrg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5a54c967-0b1f-4c38-bda7-5f94e4c1a3f4",
                            TwoFactorEnabled = false,
                            UMID = "545208",
                            UserName = "Ellaine Musni",
                            UserType = 1
                        },
                        new
                        {
                            Id = "3FFC159F-6EF0-4D4E-8C95-3A75FA1600CE",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8d3ef0d9-b045-4b8f-a18f-15f2cbfa219b",
                            Email = "n.orabi.535132@umindanao.edu.ph",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "N.ORABI.535132@UMINDANAO.EDU.PH",
                            NormalizedUserName = "NASSIM EHAB ORABI",
                            PasswordHash = "AQAAAAIAAYagAAAAELWFffc4FsOm3sh4HxeUK8V+RaSaECLZ1MLRXrlnOIEwFmcECf+AL4ONWKiSEY3b1w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5a54c967-0b1f-4c38-bda7-5f94e4c1a3f4",
                            TwoFactorEnabled = false,
                            UMID = "535132",
                            UserName = "Nassim Ehab Orabi",
                            UserType = 1
                        },
                        new
                        {
                            Id = "9ECC5D8A-A6A9-46ED-89FC-BCD694F06CD7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8d3ef0d9-b045-4b8f-a18f-15f2cbfa219b",
                            Email = "r.mateo.547357@umindanao.edu.ph",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "R.MATEO.547357@UMINDANAO.EDU.PH",
                            NormalizedUserName = "REYGIAN MATEO",
                            PasswordHash = "AQAAAAIAAYagAAAAEJ+soAmZvkLz/gKQDopn0W2JUIRDF2SP2KM9OmjCyjHICBwSMbxWQf/QTXPrXuSYLw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5a54c967-0b1f-4c38-bda7-5f94e4c1a3f4",
                            TwoFactorEnabled = false,
                            UMID = "547357",
                            UserName = "Reygian Mateo",
                            UserType = 1
                        },
                        new
                        {
                            Id = "B1FBEBAB-BDF2-473A-8AE4-E8CB036F32CE",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8d3ef0d9-b045-4b8f-a18f-15f2cbfa219b",
                            Email = "r.soylon.526044@umindanao.edu.ph",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "R.SOYLON.526044@UMINDANAO.EDU.PH",
                            NormalizedUserName = "REGGIE SOYLON",
                            PasswordHash = "AQAAAAIAAYagAAAAEMNZK5s8js5oR1xKcOJ25+kkmYQT+HNhh7Clcmc3HDwV8fTjZa7vMLjGGmyR7IB2hw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5a54c967-0b1f-4c38-bda7-5f94e4c1a3f4",
                            TwoFactorEnabled = false,
                            UMID = "526044",
                            UserName = "Reggie Soylon",
                            UserType = 1
                        },
                        new
                        {
                            Id = "C67B48B9-C09D-4A03-BB9F-A3E70D98EAFF",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8d3ef0d9-b045-4b8f-a18f-15f2cbfa219b",
                            Email = "r.isid.545154@umindanao.edu.ph",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "R.ISID.545154@UMINDANAO.EDU.PH",
                            NormalizedUserName = "RIANE KAISER ISID",
                            PasswordHash = "AQAAAAIAAYagAAAAENI+hEqn7IG4q2odQNbKdHsOQDQBjXrtb3oKv/iPAwP6qWniALsDqir7P78e820ASw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5a54c967-0b1f-4c38-bda7-5f94e4c1a3f4",
                            TwoFactorEnabled = false,
                            UMID = "545154",
                            UserName = "Riane Kaiser Isid",
                            UserType = 1
                        },
                        new
                        {
                            Id = "DA470776-6AD4-42A3-9266-6DC67444D7B7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8d3ef0d9-b045-4b8f-a18f-15f2cbfa219b",
                            Email = "j.labsan.548631@umindanao.edu.ph",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "J.LABSAN.548631@UMINDANAO.EDU.PH",
                            NormalizedUserName = "JEANELLE LABSAN",
                            PasswordHash = "AQAAAAIAAYagAAAAEMl/mZELurHmR5mkKL9PLadMSBBTxKEXopB5J3KGbuCkNS9tePFTfABRo21n9jrDDg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5a54c967-0b1f-4c38-bda7-5f94e4c1a3f4",
                            TwoFactorEnabled = false,
                            UMID = "548631",
                            UserName = "Jeanelle Labsan",
                            UserType = 1
                        },
                        new
                        {
                            Id = "EAD9B361-DF40-48F6-AC0F-4A89AFFA72D2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8d3ef0d9-b045-4b8f-a18f-15f2cbfa219b",
                            Email = "c.destajo.546094@umindanao.edu.ph",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "C.DESTAJO.546094@UMINDANAO.EDU.PH",
                            NormalizedUserName = "CHRISTOPHER JOHN DESTAJO",
                            PasswordHash = "AQAAAAIAAYagAAAAEE5tzrbpn6zs4ZHNydcz0NMSIxoLfamTS4M0BxsNzyp3eTHYz8r/IsnardsaAeQjxg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5a54c967-0b1f-4c38-bda7-5f94e4c1a3f4",
                            TwoFactorEnabled = false,
                            UMID = "546094",
                            UserName = "Christopher John Destajo",
                            UserType = 1
                        },
                        new
                        {
                            Id = "175A7233-93D9-4C74-870B-7C354E3035CC",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8d3ef0d9-b045-4b8f-a18f-15f2cbfa219b",
                            Email = "knepa@umindanao.edu.ph",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "KNEPA@UMINDANAO.EDU.PH",
                            NormalizedUserName = "KIMBERLY NEPA-MUANA",
                            PasswordHash = "AQAAAAIAAYagAAAAECwVRgr1a2BiU7JbuwxhUo2xnxVc29KERwMojMa0ars6mvyYGgQ9q0TNW7enU0LQUA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5a54c967-0b1f-4c38-bda7-5f94e4c1a3f4",
                            TwoFactorEnabled = false,
                            UMID = "330006",
                            UserName = "Kimberly Nepa-Muana",
                            UserType = 2
                        },
                        new
                        {
                            Id = "19D57012-9A44-4B2B-BBAF-F9361EBF62F7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8d3ef0d9-b045-4b8f-a18f-15f2cbfa219b",
                            Email = "salagao@umindanao.edu.ph",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "SALAGAO@UMINDANAO.EDU.PH",
                            NormalizedUserName = "STEPHEN PAUL ALAGAO",
                            PasswordHash = "AQAAAAIAAYagAAAAEJaAaRCyYMRJxBArn7vdCyJUVg9fhvsZTo9HHnaKGLDp8V2H4Mn4nLiPHR/XWZaO8w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5a54c967-0b1f-4c38-bda7-5f94e4c1a3f4",
                            TwoFactorEnabled = false,
                            UMID = "330002",
                            UserName = "Stephen Paul Alagao",
                            UserType = 2
                        },
                        new
                        {
                            Id = "2B036F02-AC85-4511-A036-DA5B9238F157",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8d3ef0d9-b045-4b8f-a18f-15f2cbfa219b",
                            Email = "mwata@umindanao.edu.ph",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "MWATA@UMINDANAO.EDU.PH",
                            NormalizedUserName = "MARIANNE WATA",
                            PasswordHash = "AQAAAAIAAYagAAAAEIHM2qrAkHum2s0+Ipfh7ICjbrJxJWqR6pPDDo5rKM8u/NvrHsPNIJCYhjkD84Wkrg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5a54c967-0b1f-4c38-bda7-5f94e4c1a3f4",
                            TwoFactorEnabled = false,
                            UMID = "330010",
                            UserName = "Marianne Wata",
                            UserType = 2
                        },
                        new
                        {
                            Id = "4018C0AF-6764-446E-99E0-B81FE80961E0",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8d3ef0d9-b045-4b8f-a18f-15f2cbfa219b",
                            Email = "jordas@umindanao.edu.ph",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "JORDAS@UMINDANAO.EDU.PH",
                            NormalizedUserName = "JETHRO JOSHUA ORDAS",
                            PasswordHash = "AQAAAAIAAYagAAAAEKxSTTg/NzHhxMzL9nqOhx01PuZmjhEwTV4NRiqXSOjLtrYpwnsySLUBW8cHXb+W3A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5a54c967-0b1f-4c38-bda7-5f94e4c1a3f4",
                            TwoFactorEnabled = false,
                            UMID = "330007",
                            UserName = "Jethro Joshua Ordas",
                            UserType = 2
                        },
                        new
                        {
                            Id = "4D919EA9-ADBA-420A-9B19-BF1878E178C6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8d3ef0d9-b045-4b8f-a18f-15f2cbfa219b",
                            Email = "rangelia@umindanao.edu.ph",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "RANGELIA@UMINDANAO.EDU.PH",
                            NormalizedUserName = "RANDY ANGELIA",
                            PasswordHash = "AQAAAAIAAYagAAAAEKCmSrCBcDFj71oyZzipT0rXehQZltQo2KWnML2SGlWEf9so36ByLFbJPNmbKW3g5g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5a54c967-0b1f-4c38-bda7-5f94e4c1a3f4",
                            TwoFactorEnabled = false,
                            UMID = "330004",
                            UserName = "Randy Angelia",
                            UserType = 2
                        },
                        new
                        {
                            Id = "53E836AA-802B-4432-B682-CD9F86691317",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8d3ef0d9-b045-4b8f-a18f-15f2cbfa219b",
                            Email = "ltubo@umindanao.edu.ph",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "LTUBO@UMINDANAO.EDU.PH",
                            NormalizedUserName = "LESTER TUBO",
                            PasswordHash = "AQAAAAIAAYagAAAAECnidvfD7uRPrH2VrUO8DmHvJJ1ZSx3WjdSWxio26lm0jXynXi/xsKKXO2uLCpLmYA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5a54c967-0b1f-4c38-bda7-5f94e4c1a3f4",
                            TwoFactorEnabled = false,
                            UMID = "330008",
                            UserName = "Lester Tubo",
                            UserType = 2
                        },
                        new
                        {
                            Id = "6EC682D8-03CC-4EBB-B48D-3D8DCBDD443D",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8d3ef0d9-b045-4b8f-a18f-15f2cbfa219b",
                            Email = "jadtoon@umindanao.edu.ph",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "JADTOON@UMINDANAO.EDU.PH",
                            NormalizedUserName = "JETRON ADTOON",
                            PasswordHash = "AQAAAAIAAYagAAAAEHt95IW4/l218+jsFBcXGT/o5rBkYb3scwM3yINibVX0CxNXhC8b7T0S3S+XtOLNcA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5a54c967-0b1f-4c38-bda7-5f94e4c1a3f4",
                            TwoFactorEnabled = false,
                            UMID = "330001",
                            UserName = "Jetron Adtoon",
                            UserType = 2
                        },
                        new
                        {
                            Id = "A4A8293F-AC1D-44AA-836F-D4C0A79FCFD9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8d3ef0d9-b045-4b8f-a18f-15f2cbfa219b",
                            Email = "jgallenero@umindanao.edu.ph",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "JGALLENERO@UMINDANAO.EDU.PH",
                            NormalizedUserName = "JAY AL GALLENERO",
                            PasswordHash = "AQAAAAIAAYagAAAAENulO1sOhLor+cpb5JJaoOagguXcduPaTC75Ekp0FjP6Pui4OmsiZCz4DhRvj3GeoQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5a54c967-0b1f-4c38-bda7-5f94e4c1a3f4",
                            TwoFactorEnabled = false,
                            UMID = "330005",
                            UserName = "Jay Al Gallenero",
                            UserType = 2
                        },
                        new
                        {
                            Id = "A71A3F07-BDB7-44A9-8128-62848CF38181",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8d3ef0d9-b045-4b8f-a18f-15f2cbfa219b",
                            Email = "juy@umindanao.edu.ph",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "JUY@UMINDANAO.EDU.PH",
                            NormalizedUserName = "JULIE UY",
                            PasswordHash = "AQAAAAIAAYagAAAAEP7l8/gXCOoxv74eekrjWjV5dlBbvqDUE39obHf/sWxMc4OzC98gvCH+RClzZUYw7Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5a54c967-0b1f-4c38-bda7-5f94e4c1a3f4",
                            TwoFactorEnabled = false,
                            UMID = "330009",
                            UserName = "Julie Uy",
                            UserType = 2
                        },
                        new
                        {
                            Id = "CA0C4ABD-802D-4B0F-85CF-778E7EA4EF01",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8d3ef0d9-b045-4b8f-a18f-15f2cbfa219b",
                            Email = "hangelia@umindanao.edu.ph",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "HANGELIA@UMINDANAO.EDU.PH",
                            NormalizedUserName = "HANNAH LEAH ANGELIA",
                            PasswordHash = "AQAAAAIAAYagAAAAEI9X79OTcLIUBuw5xz5+PxNK1WKi6DyUmuJsT66ZikzlBDj27v1I2SGWIYcIwPBT4A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5a54c967-0b1f-4c38-bda7-5f94e4c1a3f4",
                            TwoFactorEnabled = false,
                            UMID = "330003",
                            UserName = "Hannah Leah Angelia",
                            UserType = 2
                        },
                        new
                        {
                            Id = "1DE3802A-E9C2-4B04-80DB-B32A3A5F1624",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8d3ef0d9-b045-4b8f-a18f-15f2cbfa219b",
                            Email = "ccanesares@umindanao.edu.ph",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "CCANESARES@UMINDANAO.EDU.PH",
                            NormalizedUserName = "CHARLITO CAÑESARES",
                            PasswordHash = "AQAAAAIAAYagAAAAEL5W1KB4G4LIBOjYAoFrqlcLCFFeNDoL5m3/i1514zocqgwuwf/vGKUdubq+Cbf6lg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5a54c967-0b1f-4c38-bda7-5f94e4c1a3f4",
                            TwoFactorEnabled = false,
                            UMID = "310001",
                            UserName = "Charlito Cañesares",
                            UserType = 2
                        },
                        new
                        {
                            Id = "423965D1-0EF0-4CD9-931D-605CA7B38A3E",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8d3ef0d9-b045-4b8f-a18f-15f2cbfa219b",
                            Email = "ccalunsag@umindanao.edu.ph",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "CCALUNSAG@UMINDANAO.EDU.PH",
                            NormalizedUserName = "CARL JUSTINE CALUNSAG",
                            PasswordHash = "AQAAAAIAAYagAAAAECIzaS3Y2X6pqtEDlozRnbYdsrRgbntAA/FPnKkq4cmUYSeUCycmHu4A2WK8xR/uNg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5a54c967-0b1f-4c38-bda7-5f94e4c1a3f4",
                            TwoFactorEnabled = false,
                            UMID = "320001",
                            UserName = "Carl Justine Calunsag",
                            UserType = 2
                        },
                        new
                        {
                            Id = "18DA9DD0-CA87-4389-B12D-2B1A793F7A59",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8d3ef0d9-b045-4b8f-a18f-15f2cbfa219b",
                            Email = "doro@umindanao.edu.ph",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "DORO@UMINDANAO.EDU.PH",
                            NormalizedUserName = "DAN DAVID AARON ORO",
                            PasswordHash = "AQAAAAIAAYagAAAAEIc7BfVjfy8qXfRmZND4sz8QBmwyr7+t+bMjl2o/b745pTFQ8xu9chRj0ZyldnJSqw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5a54c967-0b1f-4c38-bda7-5f94e4c1a3f4",
                            TwoFactorEnabled = false,
                            UMID = "340001",
                            UserName = "Dan David Aaron Oro",
                            UserType = 2
                        },
                        new
                        {
                            Id = "AF1CA1A3-B937-45F0-9AE9-CBF355FE3F82",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8d3ef0d9-b045-4b8f-a18f-15f2cbfa219b",
                            Email = "emorales@umindanao.edu.ph",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "EMORALES@UMINDANAO.EDU.PH",
                            NormalizedUserName = "EGI JOE FRAN MORALES",
                            PasswordHash = "AQAAAAIAAYagAAAAEFjEfocaAba6RGXgRyN8uugEGtbqT/R89Y1T6oTYOnby0WfpR/xvDBUwim5fQ0pr1w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5a54c967-0b1f-4c38-bda7-5f94e4c1a3f4",
                            TwoFactorEnabled = false,
                            UMID = "350001",
                            UserName = "Egi Joe Fran Morales",
                            UserType = 2
                        },
                        new
                        {
                            Id = "55D0D298-ED9B-4B4D-9270-2019C0A5802B",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8d3ef0d9-b045-4b8f-a18f-15f2cbfa219b",
                            Email = "ramon@umindanao.edu.ph",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "RAMON@UMINDANAO.EDU.PH",
                            NormalizedUserName = "RAMIRO EMERSON AMON",
                            PasswordHash = "AQAAAAIAAYagAAAAEBIVccTORAc3oAwvVSj8xd+YYIpk8dYcl4mmPOimQTrpJySN+MmsLiHSctLz7FZWgw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5a54c967-0b1f-4c38-bda7-5f94e4c1a3f4",
                            TwoFactorEnabled = false,
                            UMID = "360001",
                            UserName = "Ramiro Emerson Amon",
                            UserType = 2
                        },
                        new
                        {
                            Id = "28DC4EA5-8AA7-43AA-813B-3E85D547893A",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8d3ef0d9-b045-4b8f-a18f-15f2cbfa219b",
                            Email = "jgallenero@umindanao.edu.ph",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "JGALLENERO@UMINDANAO.EDU.PH",
                            NormalizedUserName = "JAY GALLENERO",
                            PasswordHash = "AQAAAAIAAYagAAAAEO1ua+d/3wVpky6fzPQ7KUeGtd/FYrErbeoXGpw8QXsa68fV1bqRccCxV2bOM0QbCw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5a54c967-0b1f-4c38-bda7-5f94e4c1a3f4",
                            TwoFactorEnabled = false,
                            UMID = "330005",
                            UserName = "Jay Gallenero",
                            UserType = 3
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Consultation.Domain.ActionLog", b =>
                {
                    b.HasOne("Consultation.Domain.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersId");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Consultation.Domain.Admin", b =>
                {
                    b.HasOne("Consultation.Domain.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Consultation.Domain.ConsultationRequest", b =>
                {
                    b.HasOne("Consultation.Domain.Faculty", "Faculty")
                        .WithMany("ConsultationRequests")
                        .HasForeignKey("FacultyID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Consultation.Domain.Student", "Student")
                        .WithMany("ConsultationRequests")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Faculty");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Consultation.Domain.EnrolledCourse", b =>
                {
                    b.HasOne("Consultation.Domain.Faculty", "Faculty")
                        .WithMany("EnrolledCourses")
                        .HasForeignKey("FacultyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Consultation.Domain.SchoolYear", "SchoolYear")
                        .WithMany("EnrolledCourses")
                        .HasForeignKey("SchoolYearID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Consultation.Domain.Student", "Student")
                        .WithMany("EnrolledCourses")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Faculty");

                    b.Navigation("SchoolYear");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Consultation.Domain.Faculty", b =>
                {
                    b.HasOne("Consultation.Domain.Program", "Program")
                        .WithMany()
                        .HasForeignKey("ProgramID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Consultation.Domain.SchoolYear", "SchoolYear")
                        .WithMany("Faculties")
                        .HasForeignKey("SchoolYearID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Consultation.Domain.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Program");

                    b.Navigation("SchoolYear");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Consultation.Domain.FacultySchedule", b =>
                {
                    b.HasOne("Consultation.Domain.Faculty", "Faculty")
                        .WithMany("FacultySchedules")
                        .HasForeignKey("FacultyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("Consultation.Domain.Program", b =>
                {
                    b.HasOne("Consultation.Domain.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Consultation.Domain.Student", b =>
                {
                    b.HasOne("Consultation.Domain.Program", "Program")
                        .WithMany()
                        .HasForeignKey("ProgramID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Consultation.Domain.SchoolYear", "SchoolYear")
                        .WithMany("Students")
                        .HasForeignKey("SchoolYearID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Consultation.Domain.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Program");

                    b.Navigation("SchoolYear");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Consultation.Domain.Users", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Consultation.Domain.Users", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Consultation.Domain.Users", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Consultation.Domain.Users", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Consultation.Domain.Faculty", b =>
                {
                    b.Navigation("ConsultationRequests");

                    b.Navigation("EnrolledCourses");

                    b.Navigation("FacultySchedules");
                });

            modelBuilder.Entity("Consultation.Domain.SchoolYear", b =>
                {
                    b.Navigation("EnrolledCourses");

                    b.Navigation("Faculties");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Consultation.Domain.Student", b =>
                {
                    b.Navigation("ConsultationRequests");

                    b.Navigation("EnrolledCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
